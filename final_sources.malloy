source: trialbalance is duckdb.table('./trialbalance.csv') extend {
    primary_key: GLAccountNumber
    measure: starting_bal is GLAccountStartingBalance.sum()
    measure: ending_bal is GLAccountEndingBalance.sum()
    measure: tot_count is count()
}


source: je is duckdb.table("je.csv") extend {
    join_one: trialbalance with GLAccountNumber
    dimension:
        businessunit is upper(BusinessUnit)
        credit is replace(replace(`Credit`, ",", ''),"-","-0")
        debit is replace(replace(`Debit`, ",", ''),"-","-0")
        amount_clean is replace(replace(`Amount`, ",", ''),"-","-0")
       
       clean_credit is case when credit = '.' then '0' else credit end
        clean_debit is case when debit = '.' then '0' else debit end
        clean_amount is case when amount_clean = '.' then '0' else amount_clean end
        
       numcredit is clean_credit :: number
       numdebit is clean_debit :: number
        amount is clean_amount :: number

        fiscal_year is split_part!(Period, "-",1)
        fiscal_month is split_part!(Period, "-",2)



    measure: 
        total_count is count()
        total_credit_entries is count() {where: credit is not null}
        total_debit_entries is count() {where: debit is not null}
        sum_credit is numcredit.sum()
        sum_debit is numdebit.sum()
        amount_sum is amount.sum()
        total_accounttype is count(trialbalance.AccountType)
        debit_cash is numdebit.sum() {where: AccountClass = "Cash"}
        credit_cash is numcredit.sum() {where: AccountClass = "Cash"}
        balancing_cash is (debit_cash + credit_cash)
        end_bal_check is amount_sum + start_bal
        end_bal is trialbalance.GLAccountEndingBalance.sum()
        start_bal is trialbalance.GLAccountStartingBalance.sum()
        start_end_bal_diff is end_bal - start_bal
        unique_entry is count(JEIdentifier)
        
}
    